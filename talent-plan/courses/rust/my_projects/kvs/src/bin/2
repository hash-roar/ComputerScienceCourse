use clap::{arg, command, Command};

fn main() {
    let macthes = command!()
        .propagate_version(true)
        .subcommand(
            Command::new("set")
                .about("Set Value in the kvs")
                .arg(arg!([key]).required(true))
                .arg(arg!([value]).required(true)),
        )
        .subcommand(
            Command::new("get")
                .about("get value by key")
                .arg(arg!([key]).required(true)),
        )
        .subcommand(
            Command::new("rm")
                .about("remove key from kvs")
                .arg(arg!([key]).required(true)),
        )
        .get_matches();

    let mut db = kvs::KvStore::new();

    match macthes.subcommand().expect("expect subcommand")
    {
        ("get",Match)=>{

        },
        _=>{
            
        }

    }
}
